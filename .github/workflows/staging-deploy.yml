# This is a basic workflow to help you get started with Actions

name: CI Staging Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.CI_BOT_APP_ID }}
          private-key: ${{ secrets.CI_BOT_PRIVATE_KEY }}

      - name: Check out Git repository
        uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Check for existing draft release that starts with 'prod-'
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          DRAFT_RELEASE_ID=$(gh api repos/${{ github.repository }}/releases --jq '.[] | select( (.draft==true) and (.tag_name | startswith("prod-")) ) | .tag_name' | head -n 1)

          if [ -n "$DRAFT_RELEASE_ID" ]; then
            gh release delete $DRAFT_RELEASE_ID -y
          fi

          RELEASE_TAG="prod-$(date +%Y%m%d%H%M%S)"
          gh release create "$RELEASE_TAG" --draft --title "Prod Draft Release $RELEASE_TAG" --notes "Release notes for $RELEASE_TAG"
